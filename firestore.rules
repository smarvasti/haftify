rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Hilfsfunktion zur Überprüfung der Authentifizierung
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Überprüft, ob die angefragte User-ID mit der authentifizierten User-ID übereinstimmt
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Validiert die Struktur eines Lernfortschritts
    function isValidProgress() {
      let data = request.resource.data;
      return 
        data.keys().hasAll(['questionId', 'isCorrect', 'selectedAnswers', 'attemptedAt']) &&
        data.questionId is string &&
        data.isCorrect is bool &&
        data.selectedAnswers is list &&
        data.attemptedAt is timestamp;
    }

    // Regeln für die users-Sammlung
    match /users/{userId} {
      // Benutzer können nur ihr eigenes Profil lesen und schreiben
      allow read, write: if isOwner(userId);
      
      // Validierung für neue oder aktualisierte Dokumente
      allow create: if isAuthenticated() 
        && request.resource.data.uid == request.auth.uid
        && request.resource.data.email == request.auth.token.email;
        
      allow update: if isOwner(userId)
        && request.resource.data.uid == request.auth.uid
        && request.resource.data.email == resource.data.email;

      // Regeln für die Katalog-Subkollektionen
      match /catalogs/{catalogId} {
        allow read: if isOwner(userId);
        
        // Regeln für die Fortschritte innerhalb eines Katalogs
        match /progress/{progressId} {
          allow read, write: if isOwner(userId);
          allow create, update: if isOwner(userId) && isValidProgress();
        }
      }
    }
  }
} 